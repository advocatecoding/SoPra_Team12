[{"/Users/macbookpro/Desktop/react-xample/src/index.js":"1","/Users/macbookpro/Desktop/react-xample/src/App.js":"2","/Users/macbookpro/Desktop/react-xample/src/SignIn.js":"3","/Users/macbookpro/Desktop/react-xample/src/Start.js":"4"},{"size":411,"mtime":1649294082720,"results":"5","hashOfConfig":"6"},{"size":4321,"mtime":1649375789195,"results":"7","hashOfConfig":"6"},{"size":2173,"mtime":1649375913193,"results":"8","hashOfConfig":"6"},{"size":9104,"mtime":1649378717068,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jp4dtf",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/macbookpro/Desktop/react-xample/src/index.js",[],[],"/Users/macbookpro/Desktop/react-xample/src/App.js",["26","27","28","29","30","31","32"],[],"import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport SignIn from './SignIn';\nimport Start from './Start';\n\n/**\n * The main bank administration app. It uses Googles firebase to log into the bank end. For routing the \n * user to the respective pages, react-router-dom ist used.\n *\n @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n @see [react-router-dom](https://reacttraining.com/react-router/web/guides/quick-start)\n *\n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass App extends React.Component {\n\n    #firebaseConfig = {\n        apiKey: \"AIzaSyDYY1X2Mtxg5xeSHsuFWNK8vuw_qwAfgM4\",\n        authDomain: \"bankbeispiel-426c2.firebaseapp.com\",\n        projectId: \"bankbeispiel-426c2\",\n        storageBucket: \"bankbeispiel-426c2.appspot.com\",\n        messagingSenderId: \"54183409381\",\n        appId: \"1:54183409381:web:b21f7ca930084dccfb860c\"\n    };\n\n\t/** Constructor of the app, which initializes firebase  */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Init an empty state\n\t\tthis.state = {\n\t\t\tcurrentUser: null,\n\t\t\tappError: null,\n\t\t\tauthError: null,\n\t\t\tauthLoading: false\n\t\t};\n\t}\n\n\t/** \n\t * Create an error boundary for this app and recieve all errors from below the component tree.\n\t * \n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\n \t */\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { appError: error };\n\t}\n\n\t/** Handles firebase users logged in state changes  */\n\thandleAuthStateChange = user => {\n\t\tif (user) {\n\t\t\tthis.setState({\n\t\t\t\tauthLoading: true\n\t\t\t});\n\t\t\t// The user is signed in\n\t\t\tuser.getIdToken().then(token => {\n\t\t\t\t// Add the token to the browser's cookies. The server will then be\n\t\t\t\t// able to verify the token against the API.\n\t\t\t\t// SECURITY NOTE: As cookies can easily be modified, only put the\n\t\t\t\t// token (which is verified server-side) in a cookie; do not add other\n\t\t\t\t// user information.\n\t\t\t\tdocument.cookie = `token=${token};path=/`;\n\n\t\t\t\t// Set the user not before the token arrived \n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUser: user,\n\t\t\t\t\tauthError: null,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t}).catch(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tauthError: e,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// User has logged out, so clear the id token\n\t\t\tdocument.cookie = 'token=;path=/';\n\n\t\t\t// Set the logged out user to null\n\t\t\tthis.setState({\n\t\t\t\tcurrentUser: null,\n\t\t\t\tauthLoading: false\n\t\t\t});\n\t\t}\n\t}\n\n  /** \n   * Handles the sign in request of the SignIn component uses the firebase.auth() component to sign in.\n\t * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n\t * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n\t */\n\thandleSignIn = () => {\n\t\tthis.setState({\n\t\t\tauthLoading: true\n\t\t});\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tfirebase.auth().signInWithRedirect(provider);\n\t}\n\n\t/**\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\n\t * Initializes the firebase SDK.\n\t * \n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\n\t */\n\tcomponentDidMount() {\n\t\tfirebase.initializeApp(this.#firebaseConfig);\n\t\tfirebase.auth().languageCode = 'en';\n\t\tfirebase.auth().onAuthStateChanged(this.handleAuthStateChange);\n\t}\n\n\t/** Renders the whole app */\n\trender() {\n\t\tconst { currentUser, appError, authError, authLoading } = this.state;\n\t\treturn (\n          <Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<Container maxWidth='md'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Is a user signed in?\n\t\t\t\t\t\t\tcurrentUser ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Start></Start>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t// else show the sign in page\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Container>\n\t\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","/Users/macbookpro/Desktop/react-xample/src/SignIn.js",["33","34"],[],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Grid, Typography, withStyles, Box } from '@material-ui/core';\nimport { cyan } from \"@mui/material/colors\";\nimport { createTheme } from '@mui/material/styles';\n\n\n/** \n * Renders a landing page for users who are not signed in. Provides a sign in button \n * for using an existing google account to sign in. The component uses firebase to \n * do redirect based signin process.\n * \n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\n * \n */\n\n\nclass SignIn extends Component {\n\n\t/** \n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\t */\n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n\n\t/** Renders the sign in page, if user objext is null */\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Typography className={classes.root} style={textColor} align='center' variant='h6'>Welcome to the HdM React/Python Project Showcase</Typography>\n\t\t\t\t<Typography className={classes.root} style={textColor} align='center'>It appears, that you are not signed in.</Typography>\n\t\t\t\t<Box sx= {{mt: 5}}></Box>\n\t\t\t\t<Typography className={classes.root} style={{color: \"#00bcd4\"}} align='center'>Um die HdMWebapp zu nutzen, m체ssen Sie sich</Typography>\n\t\t\t\t<Box sx= {{mt: 2}}></Box>\n\t\t\t\t<Grid container justifyContent='center'>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t<Button variant=\"outlined\" style={{color: \"#00bcd4\", borderColor: \"#00bcd4\", borderWidth:\"2px\", borderRadius:\"50px\"}} onClick={this.handleSignInButtonClicked}>\n\t\t\t\t\t\tMit Google anmelden\n\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nconst textColor = {\n\tcolor: \"white\"\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nSignIn.propTypes = {\n\t/** @ignore */\n\tclasses: PropTypes.object.isRequired,\n\t/** \n\t * Handler function, which is called if the user wants to sign in.\n\t */\n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(SignIn)",["35","36"],"/Users/macbookpro/Desktop/react-xample/src/Start.js",["37","38","39","40","41","42"],[],"import React from 'react'\nimport { Button, Grid, Typography, withStyles, Box } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { styled, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport ArrowRight from '@mui/icons-material/ArrowRight';\nimport KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\nimport Home from '@mui/icons-material/Home';\nimport Settings from '@mui/icons-material/Settings';\nimport AddIcon from '@mui/icons-material/Add';\nimport People from '@mui/icons-material/People';\nimport PermMedia from '@mui/icons-material/PermMedia';\nimport Dns from '@mui/icons-material/Dns';\nimport Public from '@mui/icons-material/Public';\n\nconst data = [\n  { icon: <PermMedia />, label: 'Aktivit채t A' },\n  { icon: <PermMedia />, label: 'Aktivit채t B' },\n  { icon: <PermMedia />, label: 'Aktivit채t C' },\n  { icon: <PermMedia />, label: 'Aktivit채t D' },\n];\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst FireNav = styled(List)({\n  '& .MuiListItemButton-root': {\n    paddingLeft: 24,\n    paddingRight: 24,\n  },\n  '& .MuiListItemIcon-root': {\n    minWidth: 0,\n    marginRight: 16,\n  },\n  '& .MuiSvgIcon-root': {\n    fontSize: 20,\n  },\n});\n\n\nfunction Start() {\n  const [open, setOpen] = React.useState(true);\n  return (\n    <div>\n      <Typography  style={textColor} align='center' variant='h6'>HdM WebApp</Typography>\n\t\t\t<Box sx= {{mt: 5}}></Box>\n      \n      <Grid container justifyContent='center'>\n\t\t\t\t\t<Button variant=\"outlined\" style={{color: \"#00bcd4\", borderColor: \"#00bcd4\", borderWidth:\"2px\", borderRadius:\"50px\"}} >\n\t\t\t\t\t\tProjekt anlegen\n\t\t\t\t\t</Button>\n      </Grid>\n\t\t\t<Box sx= {{mt: 5}}></Box>\n      <Box sx={{ display: 'flex' }}>\n        \n      <ThemeProvider\n        theme={createTheme({\n          components: {\n            MuiListItemButton: {\n              defaultProps: {\n                disableTouchRipple: true,\n              },\n            },\n          },\n          palette: {\n            mode: 'dark',\n            primary: { main: 'rgb(102, 157, 246)' },\n            background: { paper: 'rgb(5, 30, 52)' },\n          },\n        })}\n      >\n        <Grid container spacing={0}></Grid>\n        <Grid item= {2}>\n\n        \n        <Paper elevation={0} sx={{ maxWidth: 256 }}>\n          <FireNav component=\"nav\" disablePadding>\n            \n            <Divider />\n            <ListItem component=\"div\" disablePadding>\n              <ListItemButton sx={{ height: 56 }}>\n                <ListItemIcon>\n                  <Home color=\"primary\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary=\"Projekt체bersicht\"\n                  primaryTypographyProps={{\n                    color: 'primary',\n                    fontWeight: 'medium',\n                    variant: 'body2',\n                  }}\n                />\n              </ListItemButton>\n              <Tooltip title=\"Projekt hinzuf체gen\">\n                <IconButton\n                  size=\"large\"\n                  sx={{\n                    '& > :not(style)': {\n                      color: 'rgba(255,255,255,0.8)',\n                      transition: '0.2s',\n                      transform: 'translateX(0) rotate(0)',\n                    },\n                    '&:hover, &:focus': {\n                      bgcolor: 'unset',\n                      '& svg:first-of-type': {\n                        transform: 'scale(1.4) rotate(-10deg)',\n                      },\n                      \n                    },\n                    '&:after': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      height: '80%',\n                      display: 'block',\n                      left: 0,\n                      width: '1px',\n                      bgcolor: 'divider',\n                    },\n                  }}\n                >\n                  <AddIcon/>\n                  <ArrowRight sx={{ position: 'absolute', right: 4, opacity: 0 }} />\n                </IconButton>\n              </Tooltip>\n            </ListItem>\n            <Divider/>\n            <Box\n              sx={{\n                bgcolor: open ? 'rgba(71, 98, 130, 0.2)' : null,\n                pb: open ? 2 : 0,\n              }}\n            >\n              <ListItemButton\n                alignItems=\"flex-start\"\n                onClick={() => setOpen(!open)}\n                sx={{\n                  px: 3,\n                  pt: 2.5,\n                  pb: open ? 0 : 2.5,\n                  '&:hover, &:focus': { '& svg': { opacity: open ? 1 : 0 } },\n                }}\n              >\n                <ListItemText\n                  primary=\"Projekt A\"\n                  primaryTypographyProps={{\n                    fontSize: 15,\n                    fontWeight: 'medium',\n                    lineHeight: '20px',\n                    mb: '2px',\n                  }}\n                  secondary=\"Authentication, Firestore Database, Realtime Database, Storage, Hosting, Functions, and Machine Learning\"\n                  secondaryTypographyProps={{\n                    noWrap: true,\n                    fontSize: 12,\n                    lineHeight: '16px',\n                    color: open ? 'rgba(0,0,0,0)' : 'rgba(255,255,255,0.5)',\n                  }}\n                  sx={{ my: 0 }}\n                />\n                \n                <KeyboardArrowDown\n                  sx={{\n                    mr: -1,\n                    opacity: 0,\n                    transform: open ? 'rotate(-180deg)' : 'rotate(0)',\n                    transition: '0.2s',\n                  }}\n                />\n              </ListItemButton>\n\n              {open &&\n                data.map((item) => (\n                  <ListItemButton\n                    key={item.label}\n                    sx={{ py: 0, minHeight: 32, color: 'rgba(255,255,255,.8)' }}\n                  >\n                    <ListItemIcon sx={{ color: 'inherit' }}>\n                      {item.icon}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={item.label}\n                      primaryTypographyProps={{ fontSize: 14, fontWeight: 'medium' }}\n                    />\n                  </ListItemButton>\n                ))}\n                <ListItemButton\n                alignItems=\"flex-start\"\n                onClick={() => setOpen(!open)}\n                sx={{\n                  px: 3,\n                  pt: 2.5,\n                  pb: open ? 0 : 2.5,\n                  '&:hover, &:focus': { '& svg': { opacity: open ? 1 : 0 } },\n                }}\n              >\n                <ListItemText\n                  primary=\"Projekt B\"\n                  primaryTypographyProps={{\n                    fontSize: 15,\n                    fontWeight: 'medium',\n                    lineHeight: '20px',\n                    mb: '2px',\n                  }}\n                  secondary=\"Aktivit채t A, Aktivit채t B, Aktivit채t C, Aktivit채t D, Hosting, Functions, and Machine Learning\"\n                  secondaryTypographyProps={{\n                    noWrap: true,\n                    fontSize: 12,\n                    lineHeight: '16px',\n                    color: open ? 'rgba(0,0,0,0)' : 'rgba(255,255,255,0.5)',\n                  }}\n                  sx={{ my: 0 }}\n                />\n                \n                <KeyboardArrowDown\n                  sx={{\n                    mr: -1,\n                    opacity: 0,\n                    transform: open ? 'rotate(-180deg)' : 'rotate(0)',\n                    transition: '0.2s',\n                  }}\n                />\n              </ListItemButton>\n              \n              {open &&\n                data.map((item) => (\n                  <ListItemButton\n                    key={item.label}\n                    sx={{ py: 0, minHeight: 32, color: 'rgba(255,255,255,.8)' }}\n                  >\n                    <ListItemIcon sx={{ color: 'inherit' }}>\n                      {item.icon}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={item.label}\n                      primaryTypographyProps={{ fontSize: 14, fontWeight: 'medium' }}\n                    />\n                  </ListItemButton>\n                ))}\n            </Box>\n          </FireNav>\n        </Paper>\n        </Grid>\n\n        <Grid item={10}>\n            <Item>Beispielfeld</Item>\n        </Grid>\n\n\n      </ThemeProvider>\n    </Box>\n    \n    </div>\n  )\n}\n\n\n\nconst textColor = {\n\tcolor: \"white\"\n}\n\nexport default Start",{"ruleId":"43","severity":1,"message":"44","line":2,"column":35,"nodeType":"45","messageId":"46","endLine":2,"endColumn":40},{"ruleId":"43","severity":1,"message":"47","line":2,"column":42,"nodeType":"45","messageId":"46","endLine":2,"endColumn":50},{"ruleId":"43","severity":1,"message":"48","line":3,"column":21,"nodeType":"45","messageId":"46","endLine":3,"endColumn":34},{"ruleId":"43","severity":1,"message":"49","line":3,"column":36,"nodeType":"45","messageId":"46","endLine":3,"endColumn":47},{"ruleId":"43","severity":1,"message":"50","line":119,"column":24,"nodeType":"45","messageId":"46","endLine":119,"endColumn":32},{"ruleId":"43","severity":1,"message":"51","line":119,"column":34,"nodeType":"45","messageId":"46","endLine":119,"endColumn":43},{"ruleId":"43","severity":1,"message":"52","line":119,"column":45,"nodeType":"45","messageId":"46","endLine":119,"endColumn":56},{"ruleId":"43","severity":1,"message":"53","line":4,"column":10,"nodeType":"45","messageId":"46","endLine":4,"endColumn":14},{"ruleId":"43","severity":1,"message":"54","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":21},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"43","severity":1,"message":"59","line":2,"column":36,"nodeType":"45","messageId":"46","endLine":2,"endColumn":46},{"ruleId":"43","severity":1,"message":"60","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":17},{"ruleId":"43","severity":1,"message":"61","line":17,"column":8,"nodeType":"45","messageId":"46","endLine":17,"endColumn":16},{"ruleId":"43","severity":1,"message":"62","line":19,"column":8,"nodeType":"45","messageId":"46","endLine":19,"endColumn":14},{"ruleId":"43","severity":1,"message":"63","line":21,"column":8,"nodeType":"45","messageId":"46","endLine":21,"endColumn":11},{"ruleId":"43","severity":1,"message":"64","line":22,"column":8,"nodeType":"45","messageId":"46","endLine":22,"endColumn":14},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'ThemeProvider' is defined but never used.","'CssBaseline' is defined but never used.","'appError' is assigned a value but never used.","'authError' is assigned a value but never used.","'authLoading' is assigned a value but never used.","'cyan' is defined but never used.","'createTheme' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"'withStyles' is defined but never used.","'PropTypes' is defined but never used.","'Settings' is defined but never used.","'People' is defined but never used.","'Dns' is defined but never used.","'Public' is defined but never used.","no-global-assign","no-unsafe-negation"]