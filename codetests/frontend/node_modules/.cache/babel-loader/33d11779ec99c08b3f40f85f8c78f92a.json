{"ast":null,"code":"import _classCallCheck from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{withStyles,Typography,Accordion,AccordionSummary,AccordionDetails,Grid}from'@material-ui/core';import{Button,ButtonGroup}from'@material-ui/core';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import CustomerForm from'./dialogs/CustomerForm';import CustomerDeleteDialog from'./dialogs/CustomerDeleteDialog';import AccountList from'./AccountList';/**\n * Renders a CustomerBO object within a expandable/collapsible CustomerListEntry with the customer manipulation\n * functions. If expanded, it renders a AccountList.\n * \n * @see See [AccountList](#accountlist)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomerListEntry=/*#__PURE__*/function(_Component){_inherits(CustomerListEntry,_Component);var _super=_createSuper(CustomerListEntry);function CustomerListEntry(props){var _this;_classCallCheck(this,CustomerListEntry);_this=_super.call(this,props);// Init the state\n_this.expansionPanelStateChanged=function(){_this.props.onExpandedStateChange(_this.props.customer);};_this.deleteAccountHandler=function(deletedAccount){// console.log(deletedAccount.getID());\n_this.setState({accounts:_this.state.accounts.filter(function(account){return account.getID()!==deletedAccount.getID();})});};_this.editCustomerButtonClicked=function(event){event.stopPropagation();_this.setState({showCustomerForm:true});};_this.customerFormClosed=function(customer){// customer is not null and therefor changed\nif(customer){_this.setState({customer:customer,showCustomerForm:false});}else{_this.setState({showCustomerForm:false});}};_this.deleteCustomerButtonClicked=function(event){event.stopPropagation();_this.setState({showCustomerDeleteDialog:true});};_this.deleteCustomerDialogClosed=function(customer){// if customer is not null, delete it\nif(customer){_this.props.onCustomerDeleted(customer);};// DonÂ´t show the dialog\n_this.setState({showCustomerDeleteDialog:false});};_this.state={customer:props.customer,showCustomerForm:false,showCustomerDeleteDialog:false};return _this;}/** Handles onChange events of the underlying ExpansionPanel */_createClass(CustomerListEntry,[{key:\"render\",value:/** Renders the component */function render(){var _this$props=this.props,classes=_this$props.classes,expandedState=_this$props.expandedState;// Use the states customer\nvar _this$state=this.state,customer=_this$state.customer,showCustomerForm=_this$state.showCustomerForm,showCustomerDeleteDialog=_this$state.showCustomerDeleteDialog;// console.log(this.state);\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Accordion,{defaultExpanded:false,expanded:expandedState,onChange:this.expansionPanelStateChanged,children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),id:\"customer\".concat(customer.getID(),\"accountpanel-header\"),children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,justify:\"flex-start\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",className:classes.heading,children:[customer.getLastName(),\", \",customer.getFirstName()]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(ButtonGroup,{variant:\"text\",size:\"small\",children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:this.editCustomerButtonClicked,children:\"edit\"}),/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:this.deleteCustomerButtonClicked,children:\"delete\"})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:true}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:'textSecondary',children:\"List of accounts\"})})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(AccountList,{show:expandedState,customer:customer})})]}),/*#__PURE__*/_jsx(CustomerForm,{show:showCustomerForm,customer:customer,onClose:this.customerFormClosed}),/*#__PURE__*/_jsx(CustomerDeleteDialog,{show:showCustomerDeleteDialog,customer:customer,onClose:this.deleteCustomerDialogClosed})]});}}]);return CustomerListEntry;}(Component);/** Component specific styles */var styles=function styles(theme){return{root:{width:'100%'}};};/** PropTypes */export default withStyles(styles)(CustomerListEntry);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/components/CustomerListEntry.js"],"names":["React","Component","withStyles","Typography","Accordion","AccordionSummary","AccordionDetails","Grid","Button","ButtonGroup","ExpandMoreIcon","CustomerForm","CustomerDeleteDialog","AccountList","CustomerListEntry","props","expansionPanelStateChanged","onExpandedStateChange","customer","deleteAccountHandler","deletedAccount","setState","accounts","state","filter","account","getID","editCustomerButtonClicked","event","stopPropagation","showCustomerForm","customerFormClosed","deleteCustomerButtonClicked","showCustomerDeleteDialog","deleteCustomerDialogClosed","onCustomerDeleted","classes","expandedState","heading","getLastName","getFirstName","styles","theme","root","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CustomerForm from './dialogs/CustomerForm';\nimport CustomerDeleteDialog from './dialogs/CustomerDeleteDialog';\nimport AccountList from './AccountList';\n\n\n/**\n * Renders a CustomerBO object within a expandable/collapsible CustomerListEntry with the customer manipulation\n * functions. If expanded, it renders a AccountList.\n * \n * @see See [AccountList](#accountlist)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass CustomerListEntry extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init the state\n    this.state = {\n      customer: props.customer,\n      showCustomerForm: false,\n      showCustomerDeleteDialog: false,\n    };\n  }\n\n  /** Handles onChange events of the underlying ExpansionPanel */\n  expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.customer);\n  }\n\n  /** Handles onAccountDelete events from an AccountListEntry  */\n  deleteAccountHandler = (deletedAccount) => {\n    // console.log(deletedAccount.getID());\n    this.setState({\n      accounts: this.state.accounts.filter(account => account.getID() !== deletedAccount.getID())\n    })\n  }\n\n  /** Handles the onClick event of the edit customer button */\n  editCustomerButtonClicked = (event) => {\n    event.stopPropagation();\n    this.setState({\n      showCustomerForm: true\n    });\n  }\n\n  /** Handles the onClose event of the CustomerForm */\n  customerFormClosed = (customer) => {\n    // customer is not null and therefor changed\n    if (customer) {\n      this.setState({\n        customer: customer,\n        showCustomerForm: false\n      });\n    } else {\n      this.setState({\n        showCustomerForm: false\n      });\n    }\n  }\n\n  /** Handles the onClick event of the delete customer button */\n  deleteCustomerButtonClicked = (event) => {\n    event.stopPropagation();\n    this.setState({\n      showCustomerDeleteDialog: true\n    });\n  }\n\n  /** Handles the onClose event of the CustomerDeleteDialog */\n  deleteCustomerDialogClosed = (customer) => {\n    // if customer is not null, delete it\n    if (customer) {\n      this.props.onCustomerDeleted(customer);\n    };\n\n    // DonÂ´t show the dialog\n    this.setState({\n      showCustomerDeleteDialog: false\n    });\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes, expandedState } = this.props;\n    // Use the states customer\n    const { customer, showCustomerForm, showCustomerDeleteDialog } = this.state;\n\n    // console.log(this.state);\n    return (\n      <div>\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            id={`customer${customer.getID()}accountpanel-header`}\n          >\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\n              <Grid item>\n                <Typography variant='body1' className={classes.heading}>{customer.getLastName()}, {customer.getFirstName()}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <ButtonGroup variant='text' size='small'>\n                  <Button color='primary' onClick={this.editCustomerButtonClicked}>\n                    edit\n                  </Button>\n                  <Button color='secondary' onClick={this.deleteCustomerButtonClicked}>\n                    delete\n                  </Button>\n                </ButtonGroup>\n              </Grid>\n              <Grid item xs />\n              <Grid item>\n                <Typography variant='body2' color={'textSecondary'}>List of accounts</Typography>\n              </Grid>\n            </Grid>\n          </AccordionSummary>\n          <AccordionDetails>\n            <AccountList show={expandedState} customer={customer} />\n          </AccordionDetails>\n        </Accordion>\n        <CustomerForm show={showCustomerForm} customer={customer} onClose={this.customerFormClosed} />\n        <CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />\n      </div>\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  }\n});\n\n/** PropTypes */\nCustomerListEntry.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be rendered */\n  customer: PropTypes.object.isRequired,\n  /** The state of this CustomerListEntry. If true the customer is shown with its accounts */\n  expandedState: PropTypes.bool.isRequired,\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this CustomerListEntry \n   * \n   * Signature: onExpandedStateChange(CustomerBO customer)\n   */\n  onExpandedStateChange: PropTypes.func.isRequired,\n  /** \n   *  Event Handler function which is called after a sucessfull delete of this customer.\n   * \n   * Signature: onCustomerDelete(CustomerBO customer)\n   */\n  onCustomerDeleted: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(CustomerListEntry);\n"]},"metadata":{},"sourceType":"module"}