{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/react-xample/src/SignIn.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Grid, Typography, withStyles, Box } from '@material-ui/core';\nimport { cyan } from \"@mui/material/colors\";\nimport { createTheme } from '@mui/material/styles';\n/** \n * Renders a landing page for users who are not signed in. Provides a sign in button \n * for using an existing google account to sign in. The component uses firebase to \n * do redirect based signin process.\n * \n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\n * \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSignInButtonClicked = () => {\n      this.props.onSignIn();\n    };\n  }\n\n  /** Renders the sign in page, if user objext is null */\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.root,\n        style: textColor,\n        align: \"center\",\n        variant: \"h6\",\n        children: \"Welcome to the HdM React/Python Project Showcase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.root,\n        style: textColor,\n        align: \"center\",\n        children: \"It appears, that you are not signed in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.root,\n        style: {\n          color: \"#00bcd4\"\n        },\n        align: \"center\",\n        children: \"Um die HdMWebapp zu nutzen, m\\xFCssen Sie sich\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            style: {\n              color: \"#00bcd4\",\n              borderColor: \"#00bcd4\",\n              borderWidth: \"2px\",\n              borderRadius: \"50px\"\n            },\n            onClick: this.handleSignInButtonClicked,\n            children: \"Mit Google anmelden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst divStyle = {\n  backgroundColor: '#252827'\n};\nconst textColor = {\n  color: \"white\"\n};\n/** Component specific styles */\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(2)\n  }\n});\n/** PropTypes */\n\n\nSignIn.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n\n  /** \n   * Handler function, which is called if the user wants to sign in.\n   */\n  onSignIn: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(SignIn);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/react-xample/src/SignIn.js"],"names":["React","Component","PropTypes","Button","Grid","Typography","withStyles","Box","cyan","createTheme","SignIn","handleSignInButtonClicked","props","onSignIn","render","classes","divStyle","root","textColor","mt","color","borderColor","borderWidth","borderRadius","backgroundColor","styles","theme","margin","spacing","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Grid, Typography, withStyles, Box } from '@material-ui/core';\nimport { cyan } from \"@mui/material/colors\";\nimport { createTheme } from '@mui/material/styles';\n\n\n/** \n * Renders a landing page for users who are not signed in. Provides a sign in button \n * for using an existing google account to sign in. The component uses firebase to \n * do redirect based signin process.\n * \n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\n * \n */\n\n\nclass SignIn extends Component {\n\t\n\t\n\n\t/** \n\t * Handles the click event of the sign in button an calls the prop onSignIn handler\n\t */\n\thandleSignInButtonClicked = () => {\n\t\tthis.props.onSignIn();\n\t}\n\n\t/** Renders the sign in page, if user objext is null */\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div style={divStyle}>\n\t\t\t\t<Typography className={classes.root} style={textColor} align='center' variant='h6'>Welcome to the HdM React/Python Project Showcase</Typography>\n\t\t\t\t<Typography className={classes.root} style={textColor} align='center'>It appears, that you are not signed in.</Typography>\n\t\t\t\t<Box sx= {{mt: 5}}></Box>\n\t\t\t\t<Typography className={classes.root} style={{color: \"#00bcd4\"}} align='center'>Um die HdMWebapp zu nutzen, m√ºssen Sie sich</Typography>\n\t\t\t\t<Box sx= {{mt: 2}}></Box>\n\t\t\t\t<Grid container justifyContent='center'>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t<Button variant=\"outlined\" style={{color: \"#00bcd4\", borderColor: \"#00bcd4\", borderWidth:\"2px\", borderRadius:\"50px\"}} onClick={this.handleSignInButtonClicked}>\n\t\t\t\t\t\tMit Google anmelden\n\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst divStyle = {\n\tbackgroundColor: '#252827'\n}\n\nconst textColor = {\n\tcolor: \"white\"\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n\troot: {\n\t\tmargin: theme.spacing(2)\n\t}\n});\n\n/** PropTypes */\nSignIn.propTypes = {\n\t/** @ignore */\n\tclasses: PropTypes.object.isRequired,\n\t/** \n\t * Handler function, which is called if the user wants to sign in.\n\t */\n\tonSignIn: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(SignIn)"]},"metadata":{},"sourceType":"module"}