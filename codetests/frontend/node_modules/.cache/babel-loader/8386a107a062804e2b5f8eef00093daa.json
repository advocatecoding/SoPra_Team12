{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/macbookpro/Desktop/SoPra_Team12/codetests/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/Users/macbookpro/Desktop/SoPra_Team12/codetests/frontend/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport PersonBO from './PersonBO';\n\nvar _api = /*#__PURE__*/_classPrivateFieldLooseKey(\"api\");\n\nvar _serverUrl = /*#__PURE__*/_classPrivateFieldLooseKey(\"serverUrl\");\n\nvar _getPersonsURL = /*#__PURE__*/_classPrivateFieldLooseKey(\"getPersonsURL\");\n\nvar _fetchAdvanced = /*#__PURE__*/_classPrivateFieldLooseKey(\"fetchAdvanced\");\n\nexport default class ZeiterfassungAPI {\n  constructor() {\n    Object.defineProperty(this, _serverUrl, {\n      writable: true,\n      value: \"http://localhost:5500/zeit\"\n    });\n    Object.defineProperty(this, _getPersonsURL, {\n      writable: true,\n      value: () => `${_classPrivateFieldLooseBase(this, _serverUrl)[_serverUrl]}/personen`\n    });\n    Object.defineProperty(this, _fetchAdvanced, {\n      writable: true,\n      value: (url, init) => fetch(url, init).then(res => {\n        if (!res.ok) {\n          throw Error(`${res.status} ${res.statusText}`);\n        }\n\n        return res.json();\n      })\n    });\n  }\n\n  /**\n  Wir erstellen eine Sigelton Instanz\n   */\n  static getAPI() {\n    if (_classPrivateFieldLooseBase(this, _api)[_api] == null) {\n      _classPrivateFieldLooseBase(this, _api)[_api] = new ZeiterfassungAPI();\n    }\n\n    return _classPrivateFieldLooseBase(this, _api)[_api];\n  }\n\n  /**\n   * \n   * @public\n   */\n  getPersonen() {\n    return _classPrivateFieldLooseBase(this, _fetchAdvanced)[_fetchAdvanced](_classPrivateFieldLooseBase(this, _getPersonsURL)[_getPersonsURL]()).then(responseJSON => {\n      let personenBOs = PersonBO.convertFromJSON(responseJSON);\n      return new Promise(function (resolve) {\n        resolve(personenBOs);\n      });\n    });\n  }\n\n}\nObject.defineProperty(ZeiterfassungAPI, _api, {\n  writable: true,\n  value: null\n});","map":{"version":3,"sources":["/Users/macbookpro/Desktop/SoPra_Team12/codetests/frontend/src/api/ZeiterfassungAPI.js"],"names":["PersonBO","ZeiterfassungAPI","url","init","fetch","then","res","ok","Error","status","statusText","json","getAPI","getPersonen","responseJSON","personenBOs","convertFromJSON","Promise","resolve"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;;;;;;;;;;AAEA,eAAe,MAAMC,gBAAN,CAAuB;AAAA;AAAA;AAAA;AAAA,aAIrB;AAJqB;AAAA;AAAA;AAAA,aAOjB,MAAO,GAAD,4BAAG,IAAH,yBAAmB;AAPR;AAAA;AAAA;AAAA,aAqBjB,CAACC,GAAD,EAAMC,IAAN,KAAeC,KAAK,CAACF,GAAD,EAAMC,IAAN,CAAL,CAC3BE,IAD2B,CACtBC,GAAG,IAAI;AACT,YAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,gBAAMC,KAAK,CAAE,GAAEF,GAAG,CAACG,MAAO,IAAGH,GAAG,CAACI,UAAW,EAAjC,CAAX;AACH;;AACD,eAAOJ,GAAG,CAACK,IAAJ,EAAP;AACH,OAN2B;AArBE;AAAA;;AAUlC;AACJ;AACA;AAEiB,SAANC,MAAM,GAAG;AACZ,QAAI,iDAAa,IAAjB,EAAuB;AACzB,sDAAY,IAAIX,gBAAJ,EAAZ;AACD;;AACD,uCAAO,IAAP;AACC;;AAUD;AACJ;AACA;AACA;AACIY,EAAAA,WAAW,GAAG;AACV,WAAO,8FAAoB,IAApB,qCAA2CR,IAA3C,CAAiDS,YAAD,IAAiB;AACpE,UAAIC,WAAW,GAAGf,QAAQ,CAACgB,eAAT,CAAyBF,YAAzB,CAAlB;AACA,aAAO,IAAIG,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClCA,QAAAA,OAAO,CAACH,WAAD,CAAP;AACH,OAFM,CAAP;AAGH,KALM,CAAP;AAMH;;AAxCiC;sBAAjBd,gB;;SAEH","sourcesContent":["import PersonBO from './PersonBO';\n\nexport default class ZeiterfassungAPI {\n\n    static #api = null\n\n    #serverUrl = \"http://localhost:5500/zeit\"\n\n\n    #getPersonsURL = () => `${this.#serverUrl}/personen`;\n\n\n    /**\n    Wir erstellen eine Sigelton Instanz\n     */\n\n    static getAPI() {\n        if (this.#api == null) {\n      this.#api = new ZeiterfassungAPI();\n    }\n    return this.#api;\n    }\n\n    #fetchAdvanced = (url, init) => fetch(url, init)\n        .then(res => {\n            if (!res.ok) {\n                throw Error(`${res.status} ${res.statusText}`);\n            }\n            return res.json();\n        })\n\n    /**\n     * \n     * @public\n     */\n    getPersonen() {\n        return this.#fetchAdvanced(this.#getPersonsURL()).then((responseJSON) =>{\n            let personenBOs = PersonBO.convertFromJSON(responseJSON);\n            return new Promise(function (resolve) {\n                resolve(personenBOs)\n            })\n        })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}