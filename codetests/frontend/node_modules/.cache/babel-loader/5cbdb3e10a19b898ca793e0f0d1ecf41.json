{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/SoPra_Team12/codetests/frontend/src/components/PersonenList.js\";\nimport ZeiterfassungAPI from \"../api/ZeiterfassungAPI\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport PersonDetail from \"./PersonDetail\";\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 60,\n    lineHeight: '60px'\n  };\n});\n_c = Item;\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark'\n  }\n});\nconst lightTheme = createTheme({\n  palette: {\n    mode: 'light'\n  }\n});\n\nclass PersonenList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPersonenList = () => {\n      console.log(\"SJNADFKS\");\n      ZeiterfassungAPI.getAPI().getPersonen().then(x => console.log(x)).catch(e => this.setState({\n        personen: []\n      }));\n    };\n\n    this.state = {\n      personen: []\n    };\n  }\n  /**\n   * Wir fetchen alle PersonenBOs von der REST-API, der durch die server.py bereitgestellt wird\n  */\n\n\n  async componentDidMount() {\n    const url = \"http://localhost:5500/zeit/personen\";\n    const response = await fetch(url); //console.log(response.data)\n\n    const data = await response.json(); //console.log(data);\n\n    this.setState({\n      personen: data\n    }); //console.log(\"dskmfd\", this.state.customer[0].vorname)\n\n    this.state.personen.map(d => console.log(d.vorname));\n    console.log(\"1\", this.state.personen);\n  }\n\n  render() {\n    const {\n      items\n    } = this.state;\n    const list = [1, 2, 3, 4, 5];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [this.state.personen.map(x => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            style: {\n              color: \"#00bcd4\",\n              fontSize: \"40px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"white\",\n          variant: \"h5\",\n          children: [x.vorname, \" \", x.nachname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [darkTheme].map((theme, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: theme,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                bgcolor: 'background.default',\n                display: 'grid',\n                gridTemplateColumns: {\n                  md: '1fr 1fr'\n                },\n                gap: 2\n              },\n              children: [0, 1].map(elevation => /*#__PURE__*/_jsxDEV(Item, {\n                elevation: elevation,\n                children: `elevation=${elevation}`\n              }, elevation, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PersonenList;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/SoPra_Team12/codetests/frontend/src/components/PersonenList.js"],"names":["ZeiterfassungAPI","React","Component","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","PersonDetail","Paper","Box","CommentIcon","IconButton","AccountCircleIcon","createTheme","ThemeProvider","styled","Grid","Item","theme","typography","body2","textAlign","color","palette","text","secondary","height","lineHeight","darkTheme","mode","lightTheme","PersonenList","constructor","props","getPersonenList","console","log","getAPI","getPersonen","then","x","catch","e","setState","personen","state","componentDidMount","url","response","fetch","data","json","map","d","vorname","render","items","list","width","fontSize","nachname","index","p","bgcolor","display","gridTemplateColumns","md","gap","elevation"],"mappings":"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","sourcesContent":["import ZeiterfassungAPI from \"../api/ZeiterfassungAPI\";\nimport * as React from 'react';\nimport { Component } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport PersonDetail from \"./PersonDetail\";\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport CommentIcon from '@mui/icons-material/Comment';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 60,\n    lineHeight: '60px',\n}));\nconst darkTheme = createTheme({ palette: { mode: 'dark' } });\nconst lightTheme = createTheme({ palette: { mode: 'light' } });\n\nclass PersonenList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            personen: [],\n        };\n    }\n    /**\n     * Wir fetchen alle PersonenBOs von der REST-API, der durch die server.py bereitgestellt wird\n    */\n    getPersonenList = () => {\n        console.log(\"SJNADFKS\")\n        ZeiterfassungAPI.getAPI().getPersonen()\n            .then(x =>\n                console.log(x)\n            ).catch(e =>\n                this.setState({\n                    personen: [],\n                }))\n    }\n    \n\n    async componentDidMount() {\n        const url = \"http://localhost:5500/zeit/personen\";\n        const response = await fetch(url);\n        //console.log(response.data)\n        const data = await response.json();\n        //console.log(data);\n        this.setState({ personen: data });\n        //console.log(\"dskmfd\", this.state.customer[0].vorname)\n        this.state.personen.map((d) => console.log(d.vorname))\n        console.log(\"1\", this.state.personen)\n    }\n\n\n\n    render() {\n        const { items } = this.state;\n        const list = [1, 2, 3, 4, 5]\n        return (\n            <div style={{ width: \"100%\" }}>\n                {this.state.personen.map((x) =>\n                    <ListItem>\n                        <IconButton>\n                            <AccountCircleIcon style={{ color: \"#00bcd4\", fontSize: \"40px\" }}></AccountCircleIcon>\n                        </IconButton>\n                        <Typography color=\"white\" variant=\"h5\">\n                            {x.vorname} {x.nachname}\n                        </Typography>\n                    </ListItem>\n                )}\n\n\n                <Grid container spacing={2}>\n                    {[darkTheme].map((theme, index) => (\n                        <Grid item key={index}>\n                            <ThemeProvider theme={theme}>\n                                <Box\n                                    sx={{\n                                        p: 2,\n                                        bgcolor: 'background.default',\n                                        display: 'grid',\n                                        gridTemplateColumns: { md: '1fr 1fr' },\n                                        gap: 2,\n                                    }}\n                                >\n                                    {[0, 1].map((elevation) => (\n                                        <Item key={elevation} elevation={elevation}>\n                                            {`elevation=${elevation}`}\n                                        </Item>\n                                    ))}\n                                </Box>\n                            </ThemeProvider>\n                        </Grid>\n                    ))}\n                </Grid>\n\n            </div>\n        )\n\n    }\n}\nexport default PersonenList;"]},"metadata":{},"sourceType":"module"}