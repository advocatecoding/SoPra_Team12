{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/Bank/frontend/src/components/CustomerListEntry.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CustomerForm from './dialogs/CustomerForm';\nimport CustomerDeleteDialog from './dialogs/CustomerDeleteDialog';\nimport AccountList from './AccountList';\n/**\n * Renders a CustomerBO object within a expandable/collapsible CustomerListEntry with the customer manipulation\n * functions. If expanded, it renders a AccountList.\n * \n * @see See [AccountList](#accountlist)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomerListEntry extends Component {\n  constructor(props) {\n    super(props); // Init the state\n\n    this.expansionPanelStateChanged = () => {\n      this.props.onExpandedStateChange(this.props.customer);\n    };\n\n    this.deleteAccountHandler = deletedAccount => {\n      // console.log(deletedAccount.getID());\n      this.setState({\n        accounts: this.state.accounts.filter(account => account.getID() !== deletedAccount.getID())\n      });\n    };\n\n    this.editCustomerButtonClicked = event => {\n      event.stopPropagation();\n      this.setState({\n        showCustomerForm: true\n      });\n    };\n\n    this.customerFormClosed = customer => {\n      // customer is not null and therefor changed\n      if (customer) {\n        this.setState({\n          customer: customer,\n          showCustomerForm: false\n        });\n      } else {\n        this.setState({\n          showCustomerForm: false\n        });\n      }\n    };\n\n    this.deleteCustomerButtonClicked = event => {\n      event.stopPropagation();\n      this.setState({\n        showCustomerDeleteDialog: true\n      });\n    };\n\n    this.deleteCustomerDialogClosed = customer => {\n      // if customer is not null, delete it\n      if (customer) {\n        this.props.onCustomerDeleted(customer);\n      }\n\n      ; // DonÂ´t show the dialog\n\n      this.setState({\n        showCustomerDeleteDialog: false\n      });\n    };\n\n    this.state = {\n      customer: props.customer,\n      showCustomerForm: false,\n      showCustomerDeleteDialog: false\n    };\n  }\n  /** Handles onChange events of the underlying ExpansionPanel */\n\n\n  /** Renders the component */\n  render() {\n    const {\n      classes,\n      expandedState\n    } = this.props; // Use the states customer\n\n    const {\n      customer,\n      showCustomerForm,\n      showCustomerDeleteDialog\n    } = this.state; // console.log(this.state);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Accordion, {\n        defaultExpanded: false,\n        expanded: expandedState,\n        onChange: this.expansionPanelStateChanged,\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this),\n          id: `customer${customer.getID()}accountpanel-header`,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            justify: \"flex-start\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.heading,\n                children: [customer.getLastName(), \", \", customer.getFirstName()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                variant: \"text\",\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: this.editCustomerButtonClicked,\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  onClick: this.deleteCustomerButtonClicked,\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: 'textSecondary',\n                children: \"List of accounts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(AccountList, {\n            show: expandedState,\n            customer: customer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomerForm, {\n        show: showCustomerForm,\n        customer: customer,\n        onClose: this.customerFormClosed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomerDeleteDialog, {\n        show: showCustomerDeleteDialog,\n        customer: customer,\n        onClose: this.deleteCustomerDialogClosed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/** Component specific styles */\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%'\n  }\n});\n/** PropTypes */\n\n\nCustomerListEntry.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n\n  /** The CustomerBO to be rendered */\n  customer: PropTypes.object.isRequired,\n\n  /** The state of this CustomerListEntry. If true the customer is shown with its accounts */\n  expandedState: PropTypes.bool.isRequired,\n\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this CustomerListEntry \n   * \n   * Signature: onExpandedStateChange(CustomerBO customer)\n   */\n  onExpandedStateChange: PropTypes.func.isRequired,\n\n  /** \n   *  Event Handler function which is called after a sucessfull delete of this customer.\n   * \n   * Signature: onCustomerDelete(CustomerBO customer)\n   */\n  onCustomerDeleted: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(CustomerListEntry);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/components/CustomerListEntry.js"],"names":["React","Component","PropTypes","withStyles","Typography","Accordion","AccordionSummary","AccordionDetails","Grid","Button","ButtonGroup","ExpandMoreIcon","CustomerForm","CustomerDeleteDialog","AccountList","CustomerListEntry","constructor","props","expansionPanelStateChanged","onExpandedStateChange","customer","deleteAccountHandler","deletedAccount","setState","accounts","state","filter","account","getID","editCustomerButtonClicked","event","stopPropagation","showCustomerForm","customerFormClosed","deleteCustomerButtonClicked","showCustomerDeleteDialog","deleteCustomerDialogClosed","onCustomerDeleted","render","classes","expandedState","heading","getLastName","getFirstName","styles","theme","root","width","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\nimport { Button, ButtonGroup } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CustomerForm from './dialogs/CustomerForm';\nimport CustomerDeleteDialog from './dialogs/CustomerDeleteDialog';\nimport AccountList from './AccountList';\n\n\n/**\n * Renders a CustomerBO object within a expandable/collapsible CustomerListEntry with the customer manipulation\n * functions. If expanded, it renders a AccountList.\n * \n * @see See [AccountList](#accountlist)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass CustomerListEntry extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init the state\n    this.state = {\n      customer: props.customer,\n      showCustomerForm: false,\n      showCustomerDeleteDialog: false,\n    };\n  }\n\n  /** Handles onChange events of the underlying ExpansionPanel */\n  expansionPanelStateChanged = () => {\n    this.props.onExpandedStateChange(this.props.customer);\n  }\n\n  /** Handles onAccountDelete events from an AccountListEntry  */\n  deleteAccountHandler = (deletedAccount) => {\n    // console.log(deletedAccount.getID());\n    this.setState({\n      accounts: this.state.accounts.filter(account => account.getID() !== deletedAccount.getID())\n    })\n  }\n\n  /** Handles the onClick event of the edit customer button */\n  editCustomerButtonClicked = (event) => {\n    event.stopPropagation();\n    this.setState({\n      showCustomerForm: true\n    });\n  }\n\n  /** Handles the onClose event of the CustomerForm */\n  customerFormClosed = (customer) => {\n    // customer is not null and therefor changed\n    if (customer) {\n      this.setState({\n        customer: customer,\n        showCustomerForm: false\n      });\n    } else {\n      this.setState({\n        showCustomerForm: false\n      });\n    }\n  }\n\n  /** Handles the onClick event of the delete customer button */\n  deleteCustomerButtonClicked = (event) => {\n    event.stopPropagation();\n    this.setState({\n      showCustomerDeleteDialog: true\n    });\n  }\n\n  /** Handles the onClose event of the CustomerDeleteDialog */\n  deleteCustomerDialogClosed = (customer) => {\n    // if customer is not null, delete it\n    if (customer) {\n      this.props.onCustomerDeleted(customer);\n    };\n\n    // DonÂ´t show the dialog\n    this.setState({\n      showCustomerDeleteDialog: false\n    });\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes, expandedState } = this.props;\n    // Use the states customer\n    const { customer, showCustomerForm, showCustomerDeleteDialog } = this.state;\n\n    // console.log(this.state);\n    return (\n      <div>\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            id={`customer${customer.getID()}accountpanel-header`}\n          >\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\n              <Grid item>\n                <Typography variant='body1' className={classes.heading}>{customer.getLastName()}, {customer.getFirstName()}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <ButtonGroup variant='text' size='small'>\n                  <Button color='primary' onClick={this.editCustomerButtonClicked}>\n                    edit\n                  </Button>\n                  <Button color='secondary' onClick={this.deleteCustomerButtonClicked}>\n                    delete\n                  </Button>\n                </ButtonGroup>\n              </Grid>\n              <Grid item xs />\n              <Grid item>\n                <Typography variant='body2' color={'textSecondary'}>List of accounts</Typography>\n              </Grid>\n            </Grid>\n          </AccordionSummary>\n          <AccordionDetails>\n            <AccountList show={expandedState} customer={customer} />\n          </AccordionDetails>\n        </Accordion>\n        <CustomerForm show={showCustomerForm} customer={customer} onClose={this.customerFormClosed} />\n        <CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />\n      </div>\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  }\n});\n\n/** PropTypes */\nCustomerListEntry.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be rendered */\n  customer: PropTypes.object.isRequired,\n  /** The state of this CustomerListEntry. If true the customer is shown with its accounts */\n  expandedState: PropTypes.bool.isRequired,\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this CustomerListEntry \n   * \n   * Signature: onExpandedStateChange(CustomerBO customer)\n   */\n  onExpandedStateChange: PropTypes.func.isRequired,\n  /** \n   *  Event Handler function which is called after a sucessfull delete of this customer.\n   * \n   * Signature: onCustomerDelete(CustomerBO customer)\n   */\n  onCustomerDeleted: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(CustomerListEntry);\n"]},"metadata":{},"sourceType":"module"}