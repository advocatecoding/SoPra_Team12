{"ast":null,"code":"import _classCallCheck from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import{BrowserRouter as Router,Route,Redirect}from'react-router-dom';import{Container,ThemeProvider,CssBaseline}from'@material-ui/core';import firebase from'firebase/compat/app';import'firebase/compat/auth';import Header from'./components/layout/Header';import CustomerList from'./components/CustomerList';import TransactionList from'./components/TransactionList';import About from'./components/pages/About';import AllAccountList from'./components/AllAccountList';import Theme from'./Theme';import SignIn from'./components/pages/SignIn';import LoadingProgress from'./components/dialogs/LoadingProgress';import ContextErrorMessage from'./components/dialogs/ContextErrorMessage';import firebaseConfig from'./firebaseconfig';/**\n * The main bank administration app. It uses Googles firebase to log into the bank end. For routing the \n * user to the respective pages, react-router-dom ist used.\n * \n * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n * @see [react-router-dom](https://reacttraining.com/react-router/web/guides/quick-start)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);/** Constructor of the app, which initializes firebase  */function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);// Init an empty state\n_this.handleAuthStateChange=function(user){if(user){_this.setState({authLoading:true});// The user is signed in\nuser.getIdToken().then(function(token){// Add the token to the browser's cookies. The server will then be\n// able to verify the token against the API.\n// SECURITY NOTE: As cookies can easily be modified, only put the\n// token (which is verified server-side) in a cookie; do not add other\n// user information.\ndocument.cookie=\"token=\".concat(token,\";path=/\");// Set the user not before the token arrived \n_this.setState({currentUser:user,authError:null,authLoading:false});}).catch(function(e){_this.setState({authError:e,authLoading:false});});}else{// User has logged out, so clear the id token\ndocument.cookie='token=;path=/';// Set the logged out user to null\n_this.setState({currentUser:null,authLoading:false});}};_this.handleSignIn=function(){_this.setState({authLoading:true});var provider=new firebase.auth.GoogleAuthProvider();firebase.auth().signInWithRedirect(provider);};_this.state={currentUser:null,appError:null,authError:null,authLoading:false};return _this;}/** \n\t * Create an error boundary for this app and recieve all errors from below the component tree.\n\t * \n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\n \t */_createClass(App,[{key:\"componentDidMount\",value:/**\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\n\t * Initializes the firebase SDK.\n\t * \n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\n\t */function componentDidMount(){firebase.initializeApp(firebaseConfig);firebase.auth().languageCode='en';firebase.auth().onAuthStateChanged(this.handleAuthStateChange);}/** Renders the whole app */},{key:\"render\",value:function render(){var _this$state=this.state,currentUser=_this$state.currentUser,appError=_this$state.appError,authError=_this$state.authError,authLoading=_this$state.authLoading;return/*#__PURE__*/_jsxs(ThemeProvider,{theme:Theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Router,{basename:process.env.PUBLIC_URL,children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",children:[/*#__PURE__*/_jsx(Header,{user:currentUser}),// Is a user signed in?\ncurrentUser?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Redirect,{from:\"/\",to:\"customers\"}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/customers\",children:/*#__PURE__*/_jsx(CustomerList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/transactions\",children:/*#__PURE__*/_jsx(TransactionList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/accounts\",children:/*#__PURE__*/_jsx(AllAccountList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",component:About})]}):/*#__PURE__*/ // else show the sign in page\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Redirect,{to:\"/index.html\"}),/*#__PURE__*/_jsx(SignIn,{onSignIn:this.handleSignIn})]}),/*#__PURE__*/_jsx(LoadingProgress,{show:authLoading}),/*#__PURE__*/_jsx(ContextErrorMessage,{error:authError,contextErrorMsg:\"Something went wrong during sighn in process.\",onReload:this.handleSignIn}),/*#__PURE__*/_jsx(ContextErrorMessage,{error:appError,contextErrorMsg:\"Something went wrong inside the app. Please reload the page.\"})]})})]});}}],[{key:\"getDerivedStateFromError\",value:function getDerivedStateFromError(error){// Update state so the next render will show the fallback UI.\nreturn{appError:error};}/** Handles firebase users logged in state changes  */}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/App.js"],"names":["React","BrowserRouter","Router","Route","Redirect","Container","ThemeProvider","CssBaseline","firebase","Header","CustomerList","TransactionList","About","AllAccountList","Theme","SignIn","LoadingProgress","ContextErrorMessage","firebaseConfig","App","props","handleAuthStateChange","user","setState","authLoading","getIdToken","then","token","document","cookie","currentUser","authError","catch","e","handleSignIn","provider","auth","GoogleAuthProvider","signInWithRedirect","state","appError","initializeApp","languageCode","onAuthStateChanged","process","env","PUBLIC_URL","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport Header from './components/layout/Header';\nimport CustomerList from './components/CustomerList';\nimport TransactionList from './components/TransactionList';\nimport About from './components/pages/About';\nimport AllAccountList from './components/AllAccountList';\nimport Theme from './Theme';\nimport SignIn from './components/pages/SignIn';\nimport LoadingProgress from './components/dialogs/LoadingProgress';\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\nimport firebaseConfig from './firebaseconfig';\n\n/**\n * The main bank administration app. It uses Googles firebase to log into the bank end. For routing the \n * user to the respective pages, react-router-dom ist used.\n * \n * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n * @see [react-router-dom](https://reacttraining.com/react-router/web/guides/quick-start)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass App extends React.Component {\n\n\t/** Constructor of the app, which initializes firebase  */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Init an empty state\n\t\tthis.state = {\n\t\t\tcurrentUser: null,\n\t\t\tappError: null,\n\t\t\tauthError: null,\n\t\t\tauthLoading: false\n\t\t};\n\t}\n\n\t/** \n\t * Create an error boundary for this app and recieve all errors from below the component tree.\n\t * \n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\n \t */\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { appError: error };\n\t}\n\n\t/** Handles firebase users logged in state changes  */\n\thandleAuthStateChange = user => {\n\t\tif (user) {\n\t\t\tthis.setState({\n\t\t\t\tauthLoading: true\n\t\t\t});\n\t\t\t// The user is signed in\n\t\t\tuser.getIdToken().then(token => {\n\t\t\t\t// Add the token to the browser's cookies. The server will then be\n\t\t\t\t// able to verify the token against the API.\n\t\t\t\t// SECURITY NOTE: As cookies can easily be modified, only put the\n\t\t\t\t// token (which is verified server-side) in a cookie; do not add other\n\t\t\t\t// user information.\n\t\t\t\tdocument.cookie = `token=${token};path=/`;\n\n\t\t\t\t// Set the user not before the token arrived \n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUser: user,\n\t\t\t\t\tauthError: null,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t}).catch(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tauthError: e,\n\t\t\t\t\tauthLoading: false\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// User has logged out, so clear the id token\n\t\t\tdocument.cookie = 'token=;path=/';\n\n\t\t\t// Set the logged out user to null\n\t\t\tthis.setState({\n\t\t\t\tcurrentUser: null,\n\t\t\t\tauthLoading: false\n\t\t\t});\n\t\t}\n\t}\n\n  /** \n   * Handles the sign in request of the SignIn component uses the firebase.auth() component to sign in.\n\t * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n\t * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\n\t */\n\thandleSignIn = () => {\n\t\tthis.setState({\n\t\t\tauthLoading: true\n\t\t});\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tfirebase.auth().signInWithRedirect(provider);\n\t}\n\n\t/**\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\n\t * Initializes the firebase SDK.\n\t * \n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\n\t */\n\tcomponentDidMount() {\n\t\tfirebase.initializeApp(firebaseConfig);\n\t\tfirebase.auth().languageCode = 'en';\n\t\tfirebase.auth().onAuthStateChanged(this.handleAuthStateChange);\n\t}\n\n\t/** Renders the whole app */\n\trender() {\n\t\tconst { currentUser, appError, authError, authLoading } = this.state;\n\n\t\treturn (\n\t\t\t<ThemeProvider theme={Theme}>\n\t\t\t\t{/* Global CSS reset and browser normalization. CssBaseline kickstarts an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<Container maxWidth='md'>\n\t\t\t\t\t\t<Header user={currentUser} />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Is a user signed in?\n\t\t\t\t\t\t\tcurrentUser ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Redirect from='/' to='customers' />\n\t\t\t\t\t\t\t\t\t<Route exact path='/customers'>\n\t\t\t\t\t\t\t\t\t\t<CustomerList />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path='/transactions'>\n\t\t\t\t\t\t\t\t\t\t<TransactionList />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path='/accounts'>\n\t\t\t\t\t\t\t\t\t\t<AllAccountList />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t// else show the sign in page\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Redirect to='/index.html' />\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sighn in process.`} onReload={this.handleSignIn} />\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\n\t\t\t\t\t</Container>\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}