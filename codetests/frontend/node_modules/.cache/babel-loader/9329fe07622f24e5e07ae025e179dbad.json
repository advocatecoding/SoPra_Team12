{"ast":null,"code":"import _classCallCheck from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{withStyles}from'@material-ui/core';import{BankAPI}from'../api';import ContextErrorMessage from'./dialogs/ContextErrorMessage';import LoadingProgress from'./dialogs/LoadingProgress';import AccountDetail from'./AccountDetail';/**\n * Shows all accounts of the bank.\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AllAccountList=/*#__PURE__*/function(_Component){_inherits(AllAccountList,_Component);var _super=_createSuper(AllAccountList);function AllAccountList(props){var _this;_classCallCheck(this,AllAccountList);_this=_super.call(this,props);// Init an empty state\n_this.loadAccounts=function(){BankAPI.getAPI().getAllAccounts().then(function(accounts){return _this.setState({accounts:accounts,loadingInProgress:false,// loading indicator \nloadingError:null});}).catch(function(e){return _this.setState({// Reset state with error from catch \nloadingInProgress:false,loadingError:e});});// set loading to true\n_this.setState({loadingInProgress:true,loadingError:null});};_this.state={accounts:[],loadingInProgress:false,loadingError:null};return _this;}/** Lifecycle method, which is called when the component gets inserted into the browsers DOM */_createClass(AllAccountList,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadAccounts();}/** gets the account list for this account */},{key:\"render\",value:/** Renders the component */function render(){var classes=this.props.classes;var _this$state=this.state,accounts=_this$state.accounts,loadingInProgress=_this$state.loadingInProgress,loadingError=_this$state.loadingError;return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[accounts.map(function(account){return/*#__PURE__*/_jsx(AccountDetail,{customerID:account.getOwner().toString(),accountID:account.getID().toString()},account.getID());}),/*#__PURE__*/_jsx(LoadingProgress,{show:loadingInProgress}),/*#__PURE__*/_jsx(ContextErrorMessage,{error:loadingError,contextErrorMsg:\"The list of all accounts of the bank could not be loaded.\",onReload:this.loadAccounts})]});}}]);return AllAccountList;}(Component);/** Component specific styles */var styles=function styles(theme){return{root:{width:'100%'}};};/** PropTypes */export default withStyles(styles)(AllAccountList);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/components/AllAccountList.js"],"names":["React","Component","withStyles","BankAPI","ContextErrorMessage","LoadingProgress","AccountDetail","AllAccountList","props","loadAccounts","getAPI","getAllAccounts","then","accounts","setState","loadingInProgress","loadingError","catch","e","state","classes","root","map","account","getOwner","toString","getID","styles","theme","width"],"mappings":"oeAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,UAAT,KAA2B,mBAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,+BAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAEA;AACA;AACA;AACA;AACA,G,2FACMC,CAAAA,c,gHAEJ,wBAAYC,KAAZ,CAAmB,gDACjB,uBAAMA,KAAN,EAEA;AAHiB,MAiBnBC,YAjBmB,CAiBJ,UAAM,CACnBN,OAAO,CAACO,MAAR,GAAiBC,cAAjB,GAAkCC,IAAlC,CAAuC,SAAAC,QAAQ,QAC7C,OAAKC,QAAL,CAAc,CACZD,QAAQ,CAAEA,QADE,CAEZE,iBAAiB,CAAE,KAFP,CAEc;AAC1BC,YAAY,CAAE,IAHF,CAAd,CAD6C,EAA/C,EAKMC,KALN,CAKY,SAAAC,CAAC,QACT,OAAKJ,QAAL,CAAc,CAAE;AACdC,iBAAiB,CAAE,KADP,CAEZC,YAAY,CAAEE,CAFF,CAAd,CADS,EALb,EAYA;AACA,MAAKJ,QAAL,CAAc,CACZC,iBAAiB,CAAE,IADP,CAEZC,YAAY,CAAE,IAFF,CAAd,EAID,CAnCkB,CAIjB,MAAKG,KAAL,CAAa,CACXN,QAAQ,CAAE,EADC,CAEXE,iBAAiB,CAAE,KAFR,CAGXC,YAAY,CAAE,IAHH,CAAb,CAJiB,aASlB,CAED,+F,4DACA,4BAAoB,CAClB,KAAKP,YAAL,GACD,CAED,6C,sBAqBA,4BACA,iBAAS,CACP,GAAQW,CAAAA,OAAR,CAAoB,KAAKZ,KAAzB,CAAQY,OAAR,CACA,gBAAsD,KAAKD,KAA3D,CAAQN,QAAR,aAAQA,QAAR,CAAkBE,iBAAlB,aAAkBA,iBAAlB,CAAqCC,YAArC,aAAqCA,YAArC,CAEA,mBACE,aAAK,SAAS,CAAEI,OAAO,CAACC,IAAxB,WAEMR,QAAQ,CAACS,GAAT,CAAa,SAAAC,OAAO,qBAAI,KAAC,aAAD,EACxB,UAAU,CAAEA,OAAO,CAACC,QAAR,GAAmBC,QAAnB,EADY,CACmB,SAAS,CAAEF,OAAO,CAACG,KAAR,GAAgBD,QAAhB,EAD9B,EAAoBF,OAAO,CAACG,KAAR,EAApB,CAAJ,EAApB,CAFN,cAKI,KAAC,eAAD,EAAiB,IAAI,CAAEX,iBAAvB,EALJ,cAMI,KAAC,mBAAD,EAAqB,KAAK,CAAEC,YAA5B,CAA0C,eAAe,4DAAzD,CAAwH,QAAQ,CAAE,KAAKP,YAAvI,EANJ,GADF,CAUD,C,4BAtD0BR,S,EAyD7B,gCACA,GAAM0B,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACvBP,IAAI,CAAE,CACJQ,KAAK,CAAE,MADH,CADiB,CAAL,EAApB,CAMA,gBAMA,cAAe3B,CAAAA,UAAU,CAACyB,MAAD,CAAV,CAAmBpB,cAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { BankAPI } from '../api';\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\nimport LoadingProgress from './dialogs/LoadingProgress';\nimport AccountDetail from './AccountDetail';\n\n/**\n * Shows all accounts of the bank.\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass AllAccountList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init an empty state\n    this.state = {\n      accounts: [],\n      loadingInProgress: false,\n      loadingError: null,\n    };\n  }\n\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\n  componentDidMount() {\n    this.loadAccounts();\n  }\n\n  /** gets the account list for this account */\n  loadAccounts = () => {\n    BankAPI.getAPI().getAllAccounts().then(accounts =>\n      this.setState({\n        accounts: accounts,\n        loadingInProgress: false, // loading indicator \n        loadingError: null\n      })).catch(e =>\n        this.setState({ // Reset state with error from catch \n          loadingInProgress: false,\n          loadingError: e\n        })\n      );\n\n    // set loading to true\n    this.setState({\n      loadingInProgress: true,\n      loadingError: null\n    });\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes } = this.props;\n    const { accounts, loadingInProgress, loadingError } = this.state;\n\n    return (\n      <div className={classes.root}>\n          {\n            accounts.map(account => <AccountDetail key={account.getID()} \n            customerID={account.getOwner().toString()} accountID={account.getID().toString()} />)\n          }\n          <LoadingProgress show={loadingInProgress} />\n          <ContextErrorMessage error={loadingError} contextErrorMsg={`The list of all accounts of the bank could not be loaded.`} onReload={this.loadAccounts} />\n      </div>\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  }\n});\n\n/** PropTypes */\nAllAccountList.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(AllAccountList);\n"]},"metadata":{},"sourceType":"module"}