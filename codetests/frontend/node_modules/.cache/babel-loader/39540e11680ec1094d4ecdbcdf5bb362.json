{"ast":null,"code":"import _classCallCheck from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/macbookpro/Desktop/Bank/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{withStyles,Button,IconButton,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions}from'@material-ui/core';import CloseIcon from'@material-ui/icons/Close';import{BankAPI}from'../../api';import ContextErrorMessage from'./ContextErrorMessage';import LoadingProgress from'./LoadingProgress';/**\n * Shows a modal delete/cancle dialog, which asks for deleting a customer. The CustomerBO to be deleted must be given in prop customer. \n * In dependency of the user interaction (delete/cancel) the respective backendcall is made. After that, the function of the onClose prop \n * is called with the deleted CustomerBO object as parameter. When the dialog is canceled, onClose is called with null.\n * \n * @see See Material-UIs [Dialog](https://material-ui.com/components/dialogs)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomerDeleteDialog=/*#__PURE__*/function(_Component){_inherits(CustomerDeleteDialog,_Component);var _super=_createSuper(CustomerDeleteDialog);function CustomerDeleteDialog(props){var _this;_classCallCheck(this,CustomerDeleteDialog);_this=_super.call(this,props);// Init the state\n_this.deleteCustomer=function(){BankAPI.getAPI().deleteCustomer(_this.props.customer.getID()).then(function(customer){_this.setState({deletingInProgress:false,// disable loading indicator  \ndeletingError:null// no error message\n});_this.props.onClose(_this.props.customer);// call the parent with the deleted customer\n}).catch(function(e){return _this.setState({deletingInProgress:false,// disable loading indicator \ndeletingError:e// show error message\n});});// set loading to true\n_this.setState({deletingInProgress:true,// show loading indicator\ndeletingError:null// disable error message\n});};_this.handleClose=function(){// console.log(event);\n_this.props.onClose(null);};_this.state={deletingInProgress:false,deletingError:null};return _this;}/** Delete the customer */_createClass(CustomerDeleteDialog,[{key:\"render\",value:/** Renders the component */function render(){var _this$props=this.props,classes=_this$props.classes,customer=_this$props.customer,show=_this$props.show;var _this$state=this.state,deletingInProgress=_this$state.deletingInProgress,deletingError=_this$state.deletingError;return show?/*#__PURE__*/_jsxs(Dialog,{open:show,onClose:this.handleClose,children:[/*#__PURE__*/_jsxs(DialogTitle,{id:\"delete-dialog-title\",children:[\"Delete customer\",/*#__PURE__*/_jsx(IconButton,{className:classes.closeButton,onClick:this.handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Really delete customer '\",customer.getFirstName(),\" \",customer.getLastName(),\"' (ID: \",customer.getID(),\")?\"]}),/*#__PURE__*/_jsx(LoadingProgress,{show:deletingInProgress}),/*#__PURE__*/_jsx(ContextErrorMessage,{error:deletingError,contextErrorMsg:\"The customer '\".concat(customer.getFirstName(),\" \").concat(customer.getLastName(),\"' (ID: \").concat(customer.getID(),\") could not be deleted.\"),onReload:this.deleteCustomer})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:this.handleClose,color:\"secondary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:this.deleteCustomer,color:\"primary\",children:\"Delete\"})]})]}):null;}}]);return CustomerDeleteDialog;}(Component);/** Component specific styles */var styles=function styles(theme){return{closeButton:{position:'absolute',right:theme.spacing(1),top:theme.spacing(1),color:theme.palette.grey[500]}};};/** PropTypes */export default withStyles(styles)(CustomerDeleteDialog);","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/components/dialogs/CustomerDeleteDialog.js"],"names":["React","Component","withStyles","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","CloseIcon","BankAPI","ContextErrorMessage","LoadingProgress","CustomerDeleteDialog","props","deleteCustomer","getAPI","customer","getID","then","setState","deletingInProgress","deletingError","onClose","catch","e","handleClose","state","classes","show","closeButton","getFirstName","getLastName","styles","theme","position","right","spacing","top","color","palette","grey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { BankAPI } from '../../api';\nimport ContextErrorMessage from './ContextErrorMessage';\nimport LoadingProgress from './LoadingProgress';\n\n/**\n * Shows a modal delete/cancle dialog, which asks for deleting a customer. The CustomerBO to be deleted must be given in prop customer. \n * In dependency of the user interaction (delete/cancel) the respective backendcall is made. After that, the function of the onClose prop \n * is called with the deleted CustomerBO object as parameter. When the dialog is canceled, onClose is called with null.\n * \n * @see See Material-UIs [Dialog](https://material-ui.com/components/dialogs)\n * \n * @author [Christoph Kunz](https://github.com/christophkunz)\n */\nclass CustomerDeleteDialog extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // Init the state\n    this.state = {\n      deletingInProgress: false,\n      deletingError: null\n    };\n  }\n\n  /** Delete the customer */\n  deleteCustomer = () => {\n    BankAPI.getAPI().deleteCustomer(this.props.customer.getID()).then(customer => {\n      this.setState({\n        deletingInProgress: false,              // disable loading indicator  \n        deletingError: null                     // no error message\n      });\n      this.props.onClose(this.props.customer);  // call the parent with the deleted customer\n    }).catch(e =>\n      this.setState({\n        deletingInProgress: false,              // disable loading indicator \n        deletingError: e                        // show error message\n      })\n    );\n\n    // set loading to true\n    this.setState({\n      deletingInProgress: true,                 // show loading indicator\n      deletingError: null                       // disable error message\n    });\n  }\n\n  /** Handles the close / cancel button click event */\n  handleClose = () => {\n    // console.log(event);\n    this.props.onClose(null);\n  }\n\n  /** Renders the component */\n  render() {\n    const { classes, customer, show } = this.props;\n    const { deletingInProgress, deletingError } = this.state;\n\n    return (\n      show ?\n        <Dialog open={show} onClose={this.handleClose}>\n          <DialogTitle id='delete-dialog-title'>Delete customer\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Really delete customer '{customer.getFirstName()} {customer.getLastName()}' (ID: {customer.getID()})?\n            </DialogContentText>\n            <LoadingProgress show={deletingInProgress} />\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`The customer '${customer.getFirstName()} ${customer.getLastName()}' (ID: ${customer.getID()}) could not be deleted.`}\n              onReload={this.deleteCustomer} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color='secondary'>\n              Cancel\n            </Button>\n            <Button variant='contained' onClick={this.deleteCustomer} color='primary'>\n              Delete\n            </Button> \n          </DialogActions>\n        </Dialog>\n        : null\n    );\n  }\n}\n\n/** Component specific styles */\nconst styles = theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n});\n\n/** PropTypes */\nCustomerDeleteDialog.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** The CustomerBO to be deleted */\n  customer: PropTypes.object.isRequired,\n  /** If true, the dialog is rendered */\n  show: PropTypes.bool.isRequired,\n  /**  \n   * Handler function which is called, when the dialog is closed.\n   * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\n   *  \n   * Signature: onClose(CustomerBO customer);\n   */\n  onClose: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles)(CustomerDeleteDialog);\n"]},"metadata":{},"sourceType":"module"}