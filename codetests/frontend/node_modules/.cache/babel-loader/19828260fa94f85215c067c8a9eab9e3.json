{"ast":null,"code":"/**\n * Base class for all BusinessObjects, which has an ID field by default.\n */\nexport default class BusinessObject {\n  /**\n   * The null constructor.\n   */\n  constructor() {\n    this.id = 0;\n  }\n  /**\n   * Sets the ID of this BusinessObject.\n   * \n   * @param {*} aId - the new ID of this BusinessObject\n   */\n\n\n  setID(aId) {\n    this.id = aId;\n  }\n  /**\n   * Returns the ID of this BusinessObject.\n   */\n\n\n  getID() {\n    return this.id;\n  }\n  /**\n   * Returns a string representation of this Object. This is useful for debugging purposes.\n   */\n\n\n  toString() {\n    let result = '';\n\n    for (var prop in this) {\n      result += prop + ': ' + this[prop] + ' ';\n    }\n\n    return result;\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/api/BusinessObject.js"],"names":["BusinessObject","constructor","id","setID","aId","getID","toString","result","prop"],"mappings":"AAAA;AACA;AACA;AACA,eAAe,MAAMA,cAAN,CAAqB;AAElC;AACF;AACA;AACEC,EAAAA,WAAW,GAAG;AACZ,SAAKC,EAAL,GAAU,CAAV;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,KAAK,CAACC,GAAD,EAAM;AACT,SAAKF,EAAL,GAAUE,GAAV;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKH,EAAZ;AACD;AAED;AACF;AACA;;;AACEI,EAAAA,QAAQ,GAAG;AACT,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,IAAT,IAAiB,IAAjB,EAAuB;AACrBD,MAAAA,MAAM,IAAIC,IAAI,GAAG,IAAP,GAAc,KAAKA,IAAL,CAAd,GAA2B,GAArC;AACD;;AACD,WAAOD,MAAP;AACD;;AAlCiC","sourcesContent":["/**\n * Base class for all BusinessObjects, which has an ID field by default.\n */\nexport default class BusinessObject {\n\n  /**\n   * The null constructor.\n   */\n  constructor() {\n    this.id = 0;\n  }\n\n  /**\n   * Sets the ID of this BusinessObject.\n   * \n   * @param {*} aId - the new ID of this BusinessObject\n   */\n  setID(aId) {\n    this.id = aId;\n  }\n\n  /**\n   * Returns the ID of this BusinessObject.\n   */\n  getID() {\n    return this.id;\n  }\n\n  /**\n   * Returns a string representation of this Object. This is useful for debugging purposes.\n   */\n  toString() {\n    let result = '';\n    for (var prop in this) {\n      result += prop + ': ' + this[prop] + ' ';\n    }\n    return result;\n  }\n}"]},"metadata":{},"sourceType":"module"}