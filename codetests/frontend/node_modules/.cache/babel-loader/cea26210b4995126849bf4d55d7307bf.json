{"ast":null,"code":"import BusinessObject from './BusinessObject';\n/**\n * Reresents a transaction.\n */\n\nexport default class TransactionBO extends BusinessObject {\n  /**\n   * Constructs a new TransactionBO object.\n   * \n   * @param {*} aSourceID - the ID of the source account.\n   * @param {*} aTargetID - the ID of the target account.\n   * @param {*} aAmount - the amount of money to transfer.\n   */\n  constructor(aSourceID, aTargetID, aAmount) {\n    super();\n    this.source_account = aSourceID;\n    this.target_account = aTargetID;\n    this.amount = aAmount;\n  }\n  /**\n   * Sets the source account id.\n   * \n   * @param {*} aSourceID - the new ID of the source account.\n   */\n\n\n  setSourceAccount(aSourceID) {\n    this.source_account = aSourceID;\n  }\n  /**\n   * Gets the source account id.\n   */\n\n\n  getSourceAccount() {\n    return this.source_account;\n  }\n  /**\n   * Sets the source target account id.\n   * \n   * @param {*} aTargetID - the new ID of the target account.\n   */\n\n\n  setTargetAccount(aTargetID) {\n    this.target_account = aTargetID;\n  }\n  /**\n   * Gets the target account id.\n   */\n\n\n  getTargetAccount() {\n    return this.target_account;\n  }\n  /**\n   * Sets the amount of money to transfer.\n   * \n   * @param {*} aAmount - the amount of money to transfer.\n   */\n\n\n  setAmount(aAmount) {\n    this.amount = aAmount;\n  }\n  /**\n   * Gets the amount of money of the transaction.\n   */\n\n\n  getAmount() {\n    return this.amount;\n  }\n  /**\n   * Returns an Array of TransactionBOs from a given JSON structure.\n   */\n\n\n  static fromJSON(transactions) {\n    let result = [];\n\n    if (Array.isArray(transactions)) {\n      transactions.forEach(t => {\n        Object.setPrototypeOf(t, TransactionBO.prototype);\n        result.push(t);\n      });\n    } else {\n      // Es handelt sich offenbar um ein singuläres Objekt\n      let t = transactions;\n      Object.setPrototypeOf(t, TransactionBO.prototype);\n      result.push(t);\n    }\n\n    return result;\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Bank/frontend/src/api/TransactionBO.js"],"names":["BusinessObject","TransactionBO","constructor","aSourceID","aTargetID","aAmount","source_account","target_account","amount","setSourceAccount","getSourceAccount","setTargetAccount","getTargetAccount","setAmount","getAmount","fromJSON","transactions","result","Array","isArray","forEach","t","Object","setPrototypeOf","prototype","push"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;;AACC,eAAe,MAAMC,aAAN,SAA4BD,cAA5B,CAA2C;AAEzD;AACF;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,WAAW,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,OAAvB,EAAgC;AACzC;AACA,SAAKC,cAAL,GAAsBH,SAAtB;AACA,SAAKI,cAAL,GAAsBH,SAAtB;AACA,SAAKI,MAAL,GAAcH,OAAd;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEI,EAAAA,gBAAgB,CAACN,SAAD,EAAY;AAC1B,SAAKG,cAAL,GAAsBH,SAAtB;AACD;AAED;AACF;AACA;;;AACEO,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKJ,cAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEK,EAAAA,gBAAgB,CAACP,SAAD,EAAY;AAC1B,SAAKG,cAAL,GAAsBH,SAAtB;AACD;AAED;AACF;AACA;;;AACEQ,EAAAA,gBAAgB,GAAG;AACjB,WAAO,KAAKL,cAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEM,EAAAA,SAAS,CAACR,OAAD,EAAU;AACjB,SAAKG,MAAL,GAAcH,OAAd;AACD;AAED;AACF;AACA;;;AACES,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKN,MAAZ;AACD;AAED;AACF;AACA;;;AACiB,SAARO,QAAQ,CAACC,YAAD,EAAe;AAC5B,QAAIC,MAAM,GAAG,EAAb;;AAEA,QAAIC,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAJ,EAAiC;AAC/BA,MAAAA,YAAY,CAACI,OAAb,CAAsBC,CAAD,IAAO;AAC1BC,QAAAA,MAAM,CAACC,cAAP,CAAsBF,CAAtB,EAAyBpB,aAAa,CAACuB,SAAvC;AACAP,QAAAA,MAAM,CAACQ,IAAP,CAAYJ,CAAZ;AACD,OAHD;AAID,KALD,MAKO;AACL;AACA,UAAIA,CAAC,GAAGL,YAAR;AACAM,MAAAA,MAAM,CAACC,cAAP,CAAsBF,CAAtB,EAAyBpB,aAAa,CAACuB,SAAvC;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAYJ,CAAZ;AACD;;AAED,WAAOJ,MAAP;AACD;;AAnFwD","sourcesContent":["import BusinessObject from './BusinessObject';\n\n/**\n * Reresents a transaction.\n */ \n export default class TransactionBO extends BusinessObject {\n\n  /**\n   * Constructs a new TransactionBO object.\n   * \n   * @param {*} aSourceID - the ID of the source account.\n   * @param {*} aTargetID - the ID of the target account.\n   * @param {*} aAmount - the amount of money to transfer.\n   */\n  constructor(aSourceID, aTargetID, aAmount) {\n    super();\n    this.source_account = aSourceID;\n    this.target_account = aTargetID;\n    this.amount = aAmount;\n  }\n\n  /**\n   * Sets the source account id.\n   * \n   * @param {*} aSourceID - the new ID of the source account.\n   */\n  setSourceAccount(aSourceID) {\n    this.source_account = aSourceID;\n  }\n\n  /**\n   * Gets the source account id.\n   */\n  getSourceAccount() {\n    return this.source_account;\n  }\n\n  /**\n   * Sets the source target account id.\n   * \n   * @param {*} aTargetID - the new ID of the target account.\n   */\n  setTargetAccount(aTargetID) {\n    this.target_account = aTargetID;\n  }\n\n  /**\n   * Gets the target account id.\n   */\n  getTargetAccount() {\n    return this.target_account;\n  }\n\n  /**\n   * Sets the amount of money to transfer.\n   * \n   * @param {*} aAmount - the amount of money to transfer.\n   */\n  setAmount(aAmount) {\n    this.amount = aAmount;\n  }\n\n  /**\n   * Gets the amount of money of the transaction.\n   */\n  getAmount() {\n    return this.amount;\n  }\n\n  /**\n   * Returns an Array of TransactionBOs from a given JSON structure.\n   */\n  static fromJSON(transactions) {\n    let result = [];\n\n    if (Array.isArray(transactions)) {\n      transactions.forEach((t) => {\n        Object.setPrototypeOf(t, TransactionBO.prototype);\n        result.push(t);\n      })\n    } else {\n      // Es handelt sich offenbar um ein singuläres Objekt\n      let t = transactions\n      Object.setPrototypeOf(t, TransactionBO.prototype);\n      result.push(t);\n    }\n\n    return result;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}